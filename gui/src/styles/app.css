/* ==========================================================================
   App CSS
   - Fills 100% of the window on any display
   - Replaces hardcoded pixel dimensions with viewport-based sizing
   ========================================================================== */

/* Global resets and layout scaffolding */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html, body, #root { height: 100%; }

html { font-size: clamp(14px, 2.2vh, 20px); }

body { margin: 0; background: grey; }

/* Root wrapper should take full viewport */
.lcd-wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100vw;     /* full viewport width */
  height: 100vh;    /* full viewport height */
  margin: 0 auto;
  background: white;
  overflow: hidden; /* prevent accidental scroll bleed */
}

/* If you have a header or top bar, reserve its space via CSS var.
   Otherwise this defaults to 0. JS/HTML can set --app-header-h later if needed. */
:root {
  --app-header-h: 0px;
  --safe-top: env(safe-area-inset-top, 0px);
  --safe-right: env(safe-area-inset-right, 0px);
  --safe-bottom: env(safe-area-inset-bottom, 0px);
  --safe-left: env(safe-area-inset-left, 0px);
}

/* Scrollable page region fills the remaining space */
.page {
  position: relative;
  flex: 1 1 auto;               /* take remaining space in the column */
  min-height: 0;                /* important so flex child can shrink and allow scroll */
  padding: 0.5rem 1rem;
  padding-left: calc(1rem + var(--safe-left));
  padding-right: calc(1rem + var(--safe-right));
  padding-top: max(0.5rem, var(--safe-top));
  padding-bottom: max(0.5rem, var(--safe-bottom));
  overflow-y: auto;
}

/* ==========================================================================
   Menus & grids
   ========================================================================== */

/* Override "special snowflakes" to vertically center the home page button(s) */
.home-page-menu.home-page-menu.home-page-menu.home-page-menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* And to make the status page buttons FAR APART */
.status-page-menu.status-page-menu.status-page-menu.status-page-menu {
  height: 100%;
}

.status-page-menu .button-list {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.status-page-grid {
  height: 100%;
}

/* Slide-in main menu occupies full app area when active */
.main-menu {
  position: absolute;
  top: var(--app-header-h);
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 100;
  background-color: white;
  transition: transform 0.4s ease;
  transform: translateX(100vw);
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  padding: 0.75rem;
  padding-left: calc(0.75rem + var(--safe-left));
  padding-right: calc(0.75rem + var(--safe-right));
}

.menu .header.item {
  flex-grow: 1;
}

.main-menu.active {
  transform: translateX(0);
}

/* ==========================================================================
   Buttons
   ========================================================================== */

.button-list { margin: 0.34rem; }
.button-list .ui.button {
  display: block;
  margin-bottom: 0.75rem;
  width: 100%;
}

.ui.button {
  margin-right: 0 !important;
  padding: 8px 8px 12px 8px;
}

.cancel-button {
  padding-right: 10px !important;
  padding-left: 10px !important;
}

/* ==========================================================================
   Responsive polish
   ========================================================================== */

/* Slightly tighten base size on very small displays (e.g., 320x240) */
@media (max-width: 360px), (max-height: 280px) {
  html { font-size: clamp(13px, 2.4vh, 18px); }
  .button-list .ui.button { margin-bottom: 0.5rem; }
  .page { padding: 0.5rem; }
}

/* Add a bit more breathing room on larger displays (e.g., 800x480 and up) */
@media (min-width: 640px) and (min-height: 400px) {
  html { font-size: clamp(16px, 2.0vh, 20px); }
  .page { padding: 0.75rem 1.25rem; }
}

/* Prevent accidental overscroll bounce on kiosk-like deployments */
@supports (overscroll-behavior: contain) {
  html, body { overscroll-behavior: none; }
}
